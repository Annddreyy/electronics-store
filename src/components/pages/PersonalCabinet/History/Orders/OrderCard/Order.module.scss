@use './../../../../../../scss/variables' as *;
@use './../../../../../../scss/display' as *;
@use './../../../../../../scss/breakpoints' as *;
@use './../../../../../../scss/display' as *;

@use 'sass:math';

.order {
    .title {
        position: relative;
        display: grid;
        padding: $base-padding-2 0;

        .left {
            @extend .grid-3;
            gap: $base-gap;
        }

        &::before {
            position: absolute;
            content: '';
            left: 0;
            right: 0;
            top: math.div(-$base-gap, 2);
            border-top: 1px solid var(--gray);
        }

        &::after {
            position: absolute;
            justify-self: end;
            content: '►';
            transition: transform 0.2s linear;
        }
    }

    &:last-child {
        .title {
            &::before {
                bottom: math.div(-$base-gap, 2);
                border-bottom: 1px solid var(--gray);
            }
        }
    }

    .information {
        margin-top: $base-margin-4;
        @extend .column;

        .orderComposition {
            @extend .column;

            .products {
                @extend .row-wrap;

                .product {
                    @extend .column;

                    img {
                        width: 100px;
                        height: 100px;
                        object-fit: cover;
                    }
                }
            }
        }

        .history {
            @extend .column;

            .historyElems {
                @extend .column;

                .stage {
                    @extend .row;
                }
            }
        }
    }

    &[open] {
        .title {
            &::after {
                transform: rotate(90deg);
            }
        }
    }

    .status {
        color: var(--yellow);
    }

    .status[data-status='Выполнен'] {
        color: var(--green);
    }

    .date {
        color: var(--gray);
    }
}

@include breakpoint(600px) {
    .order {
        .title {
            .left {
                grid-template-columns: 1fr;
                gap: $gap-mini;
                .orderNumber {
                    display: flex;
                    flex-direction: column;
                    gap: $gap-mini;
                }
            }
        }
    }
}
